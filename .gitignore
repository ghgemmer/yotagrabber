# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
*.bak
# OAuth  credentials
credentials.json
*credentials.json
*.token.json
*_token.json
#/src/output/*
/output/*
!/output/Readme.txt
!/output/rav4pluginhybrid_StatusInfo.json
/src/Edit*
# Exclude the contents of the src directory including all files and subdirectories on down
# Will reinclude only those subdirectories, files etc that we want.
# Doing this as I leave alot of attempts at new versions of files around instead of using git branches and a python
# development virtual environment (just a single user me), so as to not affect any existing golden files that are currently 
# being used in active runs.
/src/*
# reinclude these files in the /src directory
!/src/SearchVehicles-Example_config.yaml
!/src/SearchVehiclesRav4pluginhybrid_config.yaml
!/src/zipCodesToCheck.txt
!/src/pkgInstallList-latest.txt
!/src/pkgInstallList.txt
!/src/Invocation.txt
!/src/XSE_PP_CloseToIowa_UserMatchCriteriaFilter.py
!/src/upload-files.py
!/src/searchForVehicles.py
!/src/Rav4PluginHybridUserMatchCriteriaFilter.py
!/src/Example_UserMatchCriteriaFilter.py
!/src/dealers.py
!/src/MatchSoundNotification.mp3
!/src/createTestParquetFiles.py
!/src/RunUserVehicleSearchesExample.bat
!/src/waitForSeconds.py

# reinclude this immediate subdirectory in the /src directory.
# Must do this as git ignores that subdirectory (and anything in it on down) 
# in the immediate parent excluded directory until you reinclude it
# That is git will ignore any include of a file in that immediate subdirectory or anywhere on down until you do this. 
!/src/yotagrabber/
# exclude all files and subdirectories in this /src/yotagrabber directory
/src/yotagrabber/*
# reinclude specific files in this /src/yotagrabber directory
!/src/yotagrabber/models.py
!/src/yotagrabber/models-FirstRefactorAttemptToMakeIntoClassesForExtending.py
!/src/yotagrabber/vehicles.py
!/src/yotagrabber/config.py
!/src/yotagrabber/wafbypass.py
!/src/yotagrabber/vehiclesTestWithChangeHistoryIndividualColumns.py

# reinclude this immediate child directory in /src/yotagrabber/  (gitignore rule)
!/src/yotagrabber/graphql/
# exclude all files and subdirectories in this
/src/yotagrabber/graphql/*
# reinclude specific immediate files in this subdirectory
!/src/yotagrabber/graphql/models.graphql
!/src/yotagrabber/graphql/vehicles.graphql
!/src/yotagrabber/graphql/vehicleByVin.graphql

# reinclude this immediate child directory in /src/yotagrabber/ (gitignore rule)
!/src/yotagrabber/data/
# exclude all files and subdirectories in this
/src/yotagrabber/data/*
# reinclude specific immediate files in this subdirectory
!/src/yotagrabber/data/dealers.csv
!/src/yotagrabber/data/zipcodes.txt
!/src/yotagrabber/data/dealers_Adders.json


# reinclude this immediate child directory in /src/ (gitignore rule)
!src/test/
# exclude all files and subdirectories in this
/src/test/*
# reinclude specific immediate files in this subdirectory
!/src/test/4runnerhybridTest0_raw.parquet
!/src/test/4runnerhybridTest0_StatusInfo.json
!/src/test/4runnerhybridTest1_raw.parquet
!/src/test/4runnerhybridTest1_StatusInfo.json
!/src/test/4runnerhybridTest2Empty_raw.parquet
!/src/test/4runnerhybridTest2Empty_StatusInfo.json
!/src/test/4runnerhybridTest3HalfEmpty_raw.parquet
!/src/test/4runnerhybridTest3HalfEmpty_StatusInfo.json
!/src/test/ConfigItemOutputResultsMethodTest.bat
!/src/test/SearchVehicles4runnerhybridTest.bat
!/src/test/SearchVehicles4runnerhybridTestCnfg0_config.yaml
!/src/test/SearchVehicles4runnerhybridTestCnfg1_config.yaml
!/src/test/Test_UserMatchCriteriaFilter.py
!/src/test/4runner_Test*_raw.parquet
!/src/test/4runner_Test*_StatusInfo.json
!/src/test/4runner_Tests_LastChangeDate.txt
!/src/test/4runnerLastChangeDateTest.bat
!/src/test/modelsTest0.json
!/src/test/modelsTest0_raw.json
!/src/test/MatchSoundNotification.mp3



